---
# tasks file for autonity role

- name: Ensure Go is installed
  apt:
    name: golang-go
    state: present
  become: true  # Install Go as root

- name: Set Go environment variables
  shell: |
    echo 'export GOPATH=$HOME/go' >> $HOME/.bashrc
    echo 'export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin' >> $HOME/.bashrc
  args:
    executable: /bin/bash

- name: Source the bashrc to load Go environment
  shell: source $HOME/.bashrc
  args:
    executable: /bin/bash

- name: Clone Autonity repository
  git:
    repo: https://github.com/autonity/autonity.git
    dest: "{{ ansible_env.HOME }}/autonity"
    version: "tags/{{ autonity_version }}"
  become: false
  environment:
    HOME: "{{ ansible_env.HOME }}"

- name: Check if branch {{ autonity_version }} exists
  command: git branch --list {{ autonity_version }}
  args:
    chdir: "{{ ansible_env.HOME }}/autonity"
  register: branch_check
  ignore_errors: true

- name: Check out release tag {{ autonity_version }}
  command: git checkout tags/{{ autonity_version }} -b {{ autonity_version }}
  args:
    chdir: "{{ ansible_env.HOME }}/autonity"
  when: branch_check.stdout == ''
  register: checkout_result

- name: Build Autonity
  command: make autonity
  args:
    chdir: "{{ ansible_env.HOME }}/autonity"
  when: checkout_result.changed or branch_check.stdout != ''
  register: build_result

- name: Verify Autonity binary exists after build
  stat:
    path: "{{ ansible_env.HOME }}/autonity/build/bin/autonity"
  register: autonity_binary

- name: Copy Autonity binary to /usr/local/bin
  copy:
    src: "{{ ansible_env.HOME }}/autonity/build/bin/autonity"
    dest: /usr/local/bin/autonity
    mode: '0755'
    remote_src: true
  become: true

